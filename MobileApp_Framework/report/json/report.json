{"data": [{"type": "report", "id": 1, "attributes": {"environment": {"Python": "3.9.2", "Platform": "macOS-12.5.1-arm64-arm-64bit"}, "summary": {"passed": 2, "failed": 2, "num_tests": 4, "duration": 152.88980197906494}, "created_at": "2023-02-10 12:36:52.828734"}, "relationships": {"tests": {"data": [{"id": 1, "type": "test"}, {"id": 2, "type": "test"}, {"id": 3, "type": "test"}, {"id": 4, "type": "test"}]}}}], "included": [{"id": 1, "type": "test", "attributes": {"name": "src/spec/Android/Jobseeker_Login_Test.py::Test_Jobseeker_Login::test_VerifyGoogleLogin", "duration": 18.097891666000002, "run_index": 0, "setup": {"name": "setup", "duration": 0.03153691600000008, "outcome": "passed"}, "call": {"name": "call", "duration": 18.034413209, "outcome": "passed", "log": "\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:26 Configuring desired capabilities\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:56 Initiating Appium driver\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:58 App launch succcessfully\n\u001b[32mINFO    \u001b[0m conftest:home_screen.py:19 Selected Jobseeker\n\u001b[32mINFO    \u001b[0m conftest:jobseeker_login_screen.py:21 selected continue with email\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:24 Entered emailid\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:29 Entered Password\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:32 Selected submit button"}, "teardown": {"name": "teardown", "duration": 0.0004046250000016016, "outcome": "passed"}, "outcome": "passed"}}, {"id": 2, "type": "test", "attributes": {"name": "src/spec/Android/Jobseeker_Login_Test.py::Test_Jobseeker_Login::test_VerifyfacebookLogin", "duration": 58.034796832999994, "run_index": 1, "setup": {"name": "setup", "duration": 0.00021924999999711758, "outcome": "passed"}, "call": {"name": "call", "duration": 57.860372208, "outcome": "failed", "longrepr": "self = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x107523880>\nlocator = ('id', 'com.impactanalytics.employdnew:id/email-password'), expected = True, n = 1, kwargs = {}\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"bf9f27dc-7ddf-4eb2-994f-e9d12fbcb9cc\")>\nx = <ConfigData.Baseclass.CustomCall object at 0x10752dac0>\n\n    def is_displayed(self, locator, expected=True, n=3, **kwargs):\n        wait = WebDriverWait(self.driver, 20)\n    \n        x = iter(CustomCall())\n        while n > 1:\n            try:\n                if len(kwargs) == 0:\n>                   wait.until(EC.visibility_of_element_located(locator))\n\nConfigData/Baseclass.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bf9f27dc-7ddf-4eb2-994f-e9d12fbcb9cc\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x10752db20>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../Documents/python-appium-framework-master 2/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x107523880>\n\n    @pytest.mark.smoke\n    @pytest.mark.regression\n    def test_VerifyfacebookLogin(self):\n         self.select_Jobseeker()\n         self.select_Continuewithemail()\n>        self.enter_Login_Credentials(TestData_Cofig.jobseeker_logi_email, TestData_Cofig.jobseeke_password)\n\nsrc/spec/Android/Jobseeker_Login_Test.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/Android/login_screen.py:27: in enter_Login_Credentials\n    App.is_displayed(self,self.jobseeker_password_input)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x107523880>\nlocator = ('id', 'com.impactanalytics.employdnew:id/email-password'), expected = True, n = 1, kwargs = {}\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"bf9f27dc-7ddf-4eb2-994f-e9d12fbcb9cc\")>\nx = <ConfigData.Baseclass.CustomCall object at 0x10752dac0>\n\n    def is_displayed(self, locator, expected=True, n=3, **kwargs):\n        wait = WebDriverWait(self.driver, 20)\n    \n        x = iter(CustomCall())\n        while n > 1:\n            try:\n                if len(kwargs) == 0:\n                    wait.until(EC.visibility_of_element_located(locator))\n                    assert self.driver.find_element(*locator).is_displayed() == expected\n                else:\n                    assert self.driver.find_elements(*locator)[kwargs['index']].is_displayed() == expected\n                break\n            except Exception as e:\n                self.logger.error(f'is_displayed failed attempt {next(x)}- {locator}')\n                time.sleep(0.5)\n                n -= 1\n>               if n == 1: assert False == expected\nE               AssertionError\n\nConfigData/Baseclass.py:65: AssertionError", "log": "\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:26 Configuring desired capabilities\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:56 Initiating Appium driver\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:58 App launch succcessfully\n\u001b[32mINFO    \u001b[0m conftest:home_screen.py:19 Selected Jobseeker\n\u001b[32mINFO    \u001b[0m conftest:jobseeker_login_screen.py:21 selected continue with email\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:24 Entered emailid\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:Baseclass.py:62 is_displayed failed attempt 1- ('id', 'com.impactanalytics.employdnew:id/email-password')\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:Baseclass.py:62 is_displayed failed attempt 2- ('id', 'com.impactanalytics.employdnew:id/email-password')\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:DriverConfig.py:92 Taking screenshot on failure"}, "teardown": {"name": "teardown", "duration": 0.173986124999999, "outcome": "passed"}, "outcome": "failed"}}, {"id": 3, "type": "test", "attributes": {"name": "src/spec/Android/Jobseeker_Login_Test2.py::Test_Jobseeker_Login::test_VerifyfacebookLogins", "duration": 58.760451293, "run_index": 2, "setup": {"name": "setup", "duration": 0.00020295899999211997, "outcome": "passed"}, "call": {"name": "call", "duration": 58.588586167, "outcome": "failed", "longrepr": "self = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x1075a3ca0>\nlocator = ('id', 'com.impactanalytics.employdnew:id/email-password'), expected = True, n = 1, kwargs = {}\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"b5e717de-5bea-41bd-b64a-ff6830809206\")>\nx = <ConfigData.Baseclass.CustomCall object at 0x1075a30d0>\n\n    def is_displayed(self, locator, expected=True, n=3, **kwargs):\n        wait = WebDriverWait(self.driver, 20)\n    \n        x = iter(CustomCall())\n        while n > 1:\n            try:\n                if len(kwargs) == 0:\n>                   wait.until(EC.visibility_of_element_located(locator))\n\nConfigData/Baseclass.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b5e717de-5bea-41bd-b64a-ff6830809206\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x1075a3640>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../Documents/python-appium-framework-master 2/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x1075a3ca0>\n\n    @pytest.mark.regression\n    def test_VerifyfacebookLogins(self):\n         self.select_Jobseeker()\n         self.select_Continuewithemail()\n>        self.enter_Login_Credentials(TestData_Cofig.jobseeker_logi_email, TestData_Cofig.jobseeke_password)\n\nsrc/spec/Android/Jobseeker_Login_Test2.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPages/Android/login_screen.py:27: in enter_Login_Credentials\n    App.is_displayed(self,self.jobseeker_password_input)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <[RecursionError('maximum recursion depth exceeded') raised in repr()] Test_Jobseeker_Login object at 0x1075a3ca0>\nlocator = ('id', 'com.impactanalytics.employdnew:id/email-password'), expected = True, n = 1, kwargs = {}\nwait = <selenium.webdriver.support.wait.WebDriverWait (session=\"b5e717de-5bea-41bd-b64a-ff6830809206\")>\nx = <ConfigData.Baseclass.CustomCall object at 0x1075a30d0>\n\n    def is_displayed(self, locator, expected=True, n=3, **kwargs):\n        wait = WebDriverWait(self.driver, 20)\n    \n        x = iter(CustomCall())\n        while n > 1:\n            try:\n                if len(kwargs) == 0:\n                    wait.until(EC.visibility_of_element_located(locator))\n                    assert self.driver.find_element(*locator).is_displayed() == expected\n                else:\n                    assert self.driver.find_elements(*locator)[kwargs['index']].is_displayed() == expected\n                break\n            except Exception as e:\n                self.logger.error(f'is_displayed failed attempt {next(x)}- {locator}')\n                time.sleep(0.5)\n                n -= 1\n>               if n == 1: assert False == expected\nE               AssertionError\n\nConfigData/Baseclass.py:65: AssertionError", "log": "\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:26 Configuring desired capabilities\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:56 Initiating Appium driver\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:58 App launch succcessfully\n\u001b[32mINFO    \u001b[0m conftest:home_screen.py:19 Selected Jobseeker\n\u001b[32mINFO    \u001b[0m conftest:jobseeker_login_screen.py:21 selected continue with email\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:24 Entered emailid\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:Baseclass.py:62 is_displayed failed attempt 1- ('id', 'com.impactanalytics.employdnew:id/email-password')\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:Baseclass.py:62 is_displayed failed attempt 2- ('id', 'com.impactanalytics.employdnew:id/email-password')\n\u001b[31m\u001b[1mERROR   \u001b[0m conftest:DriverConfig.py:92 Taking screenshot on failure"}, "teardown": {"name": "teardown", "duration": 0.1714592080000159, "outcome": "passed"}, "outcome": "failed"}}, {"id": 4, "type": "test", "attributes": {"name": "src/spec/Android/Jobseeker_Login_Test2.py::Test_Jobseeker_Login::test_VerifygmailLogins", "duration": 17.867728750000055, "run_index": 3, "setup": {"name": "setup", "duration": 0.0002042500000243308, "outcome": "passed"}, "call": {"name": "call", "duration": 17.86693170800001, "outcome": "passed", "log": "\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:26 Configuring desired capabilities\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:56 Initiating Appium driver\n\u001b[32mINFO    \u001b[0m conftest:DriverConfig.py:58 App launch succcessfully\n\u001b[32mINFO    \u001b[0m conftest:home_screen.py:19 Selected Jobseeker\n\u001b[32mINFO    \u001b[0m conftest:jobseeker_login_screen.py:21 selected continue with email\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:24 Entered emailid\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:29 Entered Password\n\u001b[32mINFO    \u001b[0m conftest:login_screen.py:32 Selected submit button"}, "teardown": {"name": "teardown", "duration": 0.00038854199999605044, "outcome": "passed"}, "outcome": "passed"}}]}